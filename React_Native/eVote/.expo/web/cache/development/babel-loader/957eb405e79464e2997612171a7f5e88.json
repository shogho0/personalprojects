{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ghose\\\\Expo_Projects\\\\eVote\\\\App.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport Linking from \"react-native-web/dist/exports/Linking\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { CheckBox } from 'react-native-elements';\nimport vt from \"./assets/vote_top.png\";\nimport { Stitch, UserPasswordAuthProviderClient, UserPasswordCredential, RemoteMongoClient } from \"mongodb-stitch-react-native-sdk\";\nimport { Formik } from 'formik';\nimport { render } from 'react-dom';\nStitch.initializeDefaultAppClient('e-vote-uzpct');\n\nfunction LogIn() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      email = _useState2[0],\n      setEmail = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passWord = _useState4[0],\n      setpassWord = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function op() {\n    var app = Stitch.defaultAppClient;\n    var credential = new UserPasswordCredential(email, passWord);\n    app.auth.loginWithCredential(credential).then(function (authedUser) {\n      return navigation.navigate('entered');\n    }).catch(function (err) {\n      return alert(\"Login failed: \" + err);\n    });\n  }\n\n  function nu() {\n    var emailPasswordClient = Stitch.defaultAppClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n    emailPasswordClient.registerWithEmail(email, passWord).then(function () {\n      return navigation.navigate('entered');\n    }).catch(function (err) {\n      return alert(\"Error registering new user: \" + err);\n    });\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.text_user,\n    textAlign: 'center',\n    placeholder: \"Email\",\n    onChangeText: function onChangeText(em) {\n      return setEmail(em);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.text_pass,\n    textAlign: 'center',\n    placeholder: \"Password\",\n    onChangeText: function onChangeText(pass) {\n      return setpassWord(pass);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: op,\n    style: styles.log_but,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.but_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 65\n    }\n  }, \" Log In\")), React.createElement(TouchableOpacity, {\n    onPress: nu,\n    style: styles.ca_but,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.but_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 64\n    }\n  }, \" Create Account\")));\n}\n\nfunction li_screen() {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: vt,\n    style: styles.vote_top,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text_intro,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, \"Welcome to eLector, your online voting platform!\"), React.createElement(LogIn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar nat_screen = function (_React$Component) {\n  _inherits(nat_screen, _React$Component);\n\n  var _super = _createSuper(nat_screen);\n\n  function nat_screen(props) {\n    var _this;\n\n    _classCallCheck(this, nat_screen);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      dat: [],\n      urls: [],\n      complete: false\n    };\n    _this._get_data = _this._get_data.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(nat_screen, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._get_data();\n    }\n  }, {\n    key: \"_get_data\",\n    value: function _get_data() {\n      this.setState({\n        dat: [{\n          titl: \"President of the United States\",\n          data: [\"Barack Obama (Democrat)\", \"Mitt Romney (Republican)\", \"Gary Johnson (Libertarian)\", \"Jill Stein (Green)\"]\n        }, {\n          titl: \"Senator From the State of Texas\",\n          data: [\"Beto O'Rourke (Democrat)\", \"Ted Cruz (Republican)\"]\n        }]\n      });\n      this.setState({\n        urls: [{\n          titl: \"President of the United States\",\n          url: [\"https://en.wikipedia.org/wiki/Barack_Obama_2012_presidential_campaign\", \"https://en.wikipedia.org/wiki/Mitt_Romney_2012_presidential_campaign\"]\n        }]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var Item = function Item(_ref) {\n        var _this2 = this;\n\n        var titl = _ref.titl;\n\n        var _useState5 = useState(false),\n            _useState6 = _slicedToArray(_useState5, 2),\n            check = _useState6[0],\n            setcheck = _useState6[1];\n\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 5\n          }\n        }, React.createElement(CheckBox, {\n          title: titl,\n          checked: check,\n          onPress: function onPress() {\n            return setcheck(!check);\n          },\n          onLongPress: function onLongPress() {\n            return Linking.openURL(_this2.state.urls[0].url[0]);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 7\n          }\n        }));\n      };\n\n      return React.createElement(SafeAreaView, {\n        style: styles.container3,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 5\n        }\n      }, React.createElement(SectionList, {\n        sections: this.state.dat,\n        keyExtractor: function keyExtractor(item, index) {\n          return item + index;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Item, {\n            titl: item,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 47\n            }\n          });\n        },\n        renderSectionHeader: function renderSectionHeader(_ref3) {\n          var titl = _ref3.section.titl;\n          return React.createElement(Text, {\n            style: styles.head_style,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 9\n            }\n          }, titl);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return nat_screen;\n}(React.Component);\n\nfunction enter_screen() {\n  var navigation = useNavigation();\n\n  function ne() {\n    navigation.navigate('national');\n  }\n\n  return React.createElement(View, {\n    style: styles.container2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.top_tex,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 31\n    }\n  }, \"Congratulations, you are logged in and ready to submit your ballot!\")), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: ne,\n    style: styles.ne_but,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 31\n    }\n  }, React.createElement(Text, {\n    style: styles.nelsele_but_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272,\n      columnNumber: 87\n    }\n  }, \"National Elections\"))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.se_but,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 31\n    }\n  }, React.createElement(Text, {\n    style: styles.nelsele_but_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 73\n    }\n  }, \"State Elections\"))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.le_but,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 31\n    }\n  }, React.createElement(Text, {\n    style: styles.nelsele_but_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 73\n    }\n  }, \"Local Elections\"))), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.sub_but,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 31\n    }\n  }, React.createElement(Text, {\n    style: styles.nelsele_but_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 74\n    }\n  }, \"Submit Ballot\"))));\n}\n\nexport default function App() {\n  var Stack = createStackNavigator();\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"login\",\n    component: li_screen,\n    options: {\n      title: 'Log In'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"entered\",\n    component: enter_screen,\n    options: {\n      title: 'Welcome!'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"national\",\n    component: nat_screen,\n    options: {\n      title: 'National Elections'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  container2: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  container3: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  vote_top: {\n    width: 400,\n    height: 200,\n    top: 50\n  },\n  text_intro: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    justifyContent: 'center',\n    textAlign: 'center',\n    top: 80\n  },\n  text_user: {\n    width: 400,\n    borderWidth: 2,\n    fontSize: 40,\n    top: 120\n  },\n  text_pass: {\n    width: 400,\n    borderWidth: 2,\n    fontSize: 40,\n    top: 150\n  },\n  log_but: {\n    top: 180,\n    width: 130,\n    height: 40,\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  },\n  ca_but: {\n    top: 220,\n    width: 250,\n    height: 40,\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  },\n  but_text: {\n    fontSize: 30,\n    color: 'white'\n  },\n  head_style: {\n    color: 'black',\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n    fontSize: 20,\n    textAlign: 'left'\n  },\n  top_tex: {\n    textAlign: 'center',\n    fontSize: 25,\n    top: 20,\n    width: 400\n  },\n  ne_but: {\n    height: 60,\n    width: 300,\n    backgroundColor: 'red',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  se_but: {\n    height: 60,\n    width: 300,\n    backgroundColor: 'gray',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  le_but: {\n    height: 60,\n    width: 300,\n    backgroundColor: 'blue',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sub_but: {\n    height: 60,\n    width: 300,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  nelsele_but_text: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});","map":{"version":3,"sources":["C:/Users/Ghose/Expo_Projects/eVote/App.js"],"names":["React","useState","NavigationContainer","useNavigation","createStackNavigator","CheckBox","vt","Stitch","UserPasswordAuthProviderClient","UserPasswordCredential","RemoteMongoClient","Formik","render","initializeDefaultAppClient","LogIn","email","setEmail","passWord","setpassWord","navigation","op","app","defaultAppClient","credential","auth","loginWithCredential","then","authedUser","navigate","catch","err","alert","nu","emailPasswordClient","getProviderClient","factory","registerWithEmail","flex","alignItems","styles","text_user","em","text_pass","pass","log_but","but_text","ca_but","li_screen","container","vote_top","text_intro","nat_screen","props","state","dat","urls","complete","_get_data","bind","setState","titl","data","url","Item","check","setcheck","Linking","openURL","container3","item","index","section","head_style","Component","enter_screen","ne","container2","top_tex","ne_but","nelsele_but_text","se_but","le_but","sub_but","App","Stack","title","StyleSheet","create","backgroundColor","justifyContent","width","height","top","fontSize","fontWeight","textAlign","borderWidth","color","fontStyle"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport {NavigationContainer, useNavigation} from '@react-navigation/native';\nimport { StyleSheet, Text, View, Image, TextInput, TouchableOpacity, SafeAreaView, SectionList, Linking} from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {CheckBox} from 'react-native-elements';\nimport vt from './assets/vote_top.png';\nimport { Stitch, UserPasswordAuthProviderClient,UserPasswordCredential, RemoteMongoClient} from \"mongodb-stitch-react-native-sdk\";\nimport {Formik} from 'formik';\nimport { render } from 'react-dom';\n\nStitch.initializeDefaultAppClient('e-vote-uzpct');\n\n\nfunction LogIn(){\n  const [email, setEmail] = useState('');\n  const [passWord, setpassWord] = useState('');\n  const navigation = useNavigation();\n  function op(){\n    const app = Stitch.defaultAppClient\n    const credential = new UserPasswordCredential(email, passWord)\n    app.auth.loginWithCredential(credential)\n    // Returns a promise that resolves to the authenticated user\n    .then(authedUser => navigation.navigate('entered'))\n    .catch(err => alert(\"Login failed: \" + err))\n  }\n\n  function nu(){\n    const emailPasswordClient = Stitch.defaultAppClient.auth.getProviderClient(UserPasswordAuthProviderClient.factory);\n    emailPasswordClient.registerWithEmail(email, passWord).then(() => navigation.navigate('entered')).catch(err =>alert(\"Error registering new user: \" + err));\n  }\n\n  return(\n    <View style = {{flex: 1, alignItems: 'center'}}>\n      <TextInput style = {styles.text_user} textAlign = {'center'}\n      placeholder = \"Email\"\n      onChangeText = {(em) => setEmail(em)}\n      />\n      <TextInput style = {styles.text_pass} textAlign = {'center'}\n      placeholder = \"Password\"\n      onChangeText = {(pass) => setpassWord(pass)}\n      />\n\n      <TouchableOpacity onPress = {op} style = {styles.log_but}><Text style = {styles.but_text}> Log In</Text></TouchableOpacity> \n      <TouchableOpacity onPress = {nu} style = {styles.ca_but}><Text style = {styles.but_text}> Create Account</Text></TouchableOpacity> \n    </View>\n  )\n}\n\nfunction li_screen(){\n  return(\n    <View style={styles.container}>\n      <Image source = {vt} style = {styles.vote_top} />\n      <Text style = {styles.text_intro}>Welcome to eLector, your online voting platform!</Text>\n      <LogIn />\n    </View>\n  )\n}\n\n\n\n/*async function get_data(){\n  const gd=  Stitch.defaultAppClient\n  const mdb = gd.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n  const ncol = mdb.db(\"candidates\").collection(\"national_candidates\");\n\n  return await ncol.find().toArray((err, data)  =>{\n    if(err){alert(err);}\n    else{\n      alert(\"inawait\")\n      data.forEach((item)  => {\n        let tempdat = dat.slice();\n        let tempurl = urls.slice();\n        let added = 0;\n        for(let i = 0; i < dat.length; i++){\n          if(dat[i][\"titl\"] == item[\"category\"]){\n            tempdat[i][\"data\"].push(item[\"name\"] + \" (\" + item[\"party\"] + \")\");\n            added = 1;\n          }\n          \n          \n          for(let i = 0; i < urls.length; i++){\n            if(urls[i][\"titl\"] == item[\"category\"]){\n              tempurl[i][\"url\"].push(item[\"url\"]);\n            }\n          }\n      \n          if(added == 0){\n            tempdat.push({titl: item[\"category\"], data: [item[\"name\"] + \" (\" + item[\"party\"] + \")\"]});\n            tempurl.push({titl: item[\"category\"], url: [item[\"url\"]]});\n          }\n      \n          dat = tempdat;\n          urls = tempurl;\n        }\n      })\n  }})\n} */\n\n\nclass nat_screen extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      dat: [],\n      urls: [],\n      complete: false\n    };\n    this._get_data = this._get_data.bind(this);\n  }\n\n\n  componentDidMount(){\n    this._get_data();\n  }\n\n  _get_data(){\n    this.setState({dat: [{titl: \"President of the United States\", data: [\"Barack Obama (Democrat)\", \"Mitt Romney (Republican)\", \"Gary Johnson (Libertarian)\", \"Jill Stein (Green)\" ]}, \n  {titl: \"Senator From the State of Texas\", data: [\"Beto O'Rourke (Democrat)\", \"Ted Cruz (Republican)\" ]}]});\n\n    this.setState({urls: [{titl: \"President of the United States\", url: [\"https://en.wikipedia.org/wiki/Barack_Obama_2012_presidential_campaign\", \"https://en.wikipedia.org/wiki/Mitt_Romney_2012_presidential_campaign\"]}]});\n  }\n\n render(){\n    \n  const Item = function ({titl}) {\n    const [check, setcheck] = useState(false);\n    return(\n    <View>\n      <CheckBox   title = {titl} checked = {check} onPress={() => setcheck(!check)} onLongPress ={() => Linking.openURL(((this.state.urls[0]).url)[0])} />\n    </View>)\n  }; \n\n  return(\n    <SafeAreaView style={styles.container3}>\n      <SectionList\n      sections = {this.state.dat}\n      keyExtractor = {(item, index) => item + index}\n      renderItem={function ({ item }) {return(<Item titl={item} />)}}\n      renderSectionHeader={function ({ section: { titl } }) { return((\n        <Text style = {styles.head_style} >{titl}</Text>\n      ))}}\n      />\n      \n    </SafeAreaView>\n  ) \n  \n\n}\n\n} \n/*\nclass nat_screen extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      dat: [],\n      urls: [],\n      complete: false\n    };\n    this._get_data = this._get_data.bind(this);\n  }\n\n\n  componentDidMount(){\n    this._get_data();\n  }\n\n  _iscompl = () => {\n    this.setState({complete: true})\n  };\n\n  _get_data(){\n    const gd=  Stitch.defaultAppClient;\n    const mdb = gd.getServiceClient(RemoteMongoClient.factory, \"mongodb-atlas\");\n    const ncol = mdb.db(\"candidates\").collection(\"national_candidates\");\n    ncol.find().toArray((err, data)  =>{\n      if(err){alert(\"Error\");}\n      else{\n        alert(\"inawait\")\n        data.forEach((item)  => {\n          let tempdat = this.state.dat.slice();\n          let tempurl = this.state.urls.slice();\n          let added = 0;\n          for(let i = 0; i < this.state.dat.length; i++){\n            if(this.state.dat[i][\"titl\"] == item[\"category\"]){\n              tempdat[i][\"data\"].push(item[\"name\"] + \" (\" + item[\"party\"] + \")\");\n              added = 1;\n            }\n            \n            \n            for(let i = 0; i < this.state.urls.length; i++){\n              if(this.state.urls[i][\"titl\"] == item[\"category\"]){\n                tempurl[i][\"url\"].push(item[\"url\"]);\n              }\n            }\n        \n            if(added == 0){\n              tempdat.push({titl: item[\"category\"], data: [item[\"name\"] + \" (\" + item[\"party\"] + \")\"]});\n              tempurl.push({titl: item[\"category\"], url: [item[\"url\"]]});\n            }\n        \n            this.setState({dat: tempdat});\n            this.setState({urls: tempurl});\n          }\n        })\n      }\n      //this._iscompl();\n    })\n  } */\n\n\n \n  /*\n  get_data().then((result) => {\n    alert(result.length);\n    setdatt(result);\n  }); */\n\n\n  /*\n  const dat = [{titl: \"President of the United States\", data: [\"Barack Obama (Democrat)\", \"Mitt Romney (Republican)\", \"Gary Johnson (Libertarian)\", \"Jill Stein (Green)\" ]}, \n  {titl: \"Senator From the State of Texas\", data: [\"Beto O'Rourke (Democrat)\", \"Ted Cruz (Republican)\" ]}];\n\n  const urls = [{titl: \"President of the United States\", url: [\"https://en.wikipedia.org/wiki/Barack_Obama_2012_presidential_campaign\", \"https://en.wikipedia.org/wiki/Mitt_Romney_2012_presidential_campaign\"]}]\n  */\n\n  \n\n/*\n  render(){\n    \n    const Item = function ({titl}) {\n      const [check, setcheck] = useState(false);\n      return(\n      <View>\n        <CheckBox   title = {titl} checked = {check} onPress={() => setcheck(!check)} onLongPress ={() => Linking.openURL(((this.state.urls[0]).url)[0])} />\n      </View>)\n    }; \n\n    return(\n      <SafeAreaView style={styles.container3}>\n        <SectionList\n        sections = {this.state.dat}\n        keyExtractor = {(item, index) => item + index}\n        renderItem={function ({ item }) {return(<Item titl={item} />)}}\n        renderSectionHeader={function ({ section: { titl } }) { return((\n          <Text style = {styles.head_style} >{titl}</Text>\n        ))}}\n        />\n        \n      </SafeAreaView>\n    ) \n    \n\n  }\n\n} */\n\n\n\nfunction enter_screen(){\n  const navigation = useNavigation();\n\n  function ne(){\n    navigation.navigate('national');\n  }\n\n  return(\n    <View style = {styles.container2}>\n      <View style ={{flex:1}}><Text style = {styles.top_tex}>Congratulations, you are logged in and ready to submit your ballot!</Text></View>\n      <View style ={{flex:1}}><TouchableOpacity onPress ={ne} style = {styles.ne_but}><Text style = {styles.nelsele_but_text}>National Elections</Text></TouchableOpacity></View>\n      <View style ={{flex:1}}><TouchableOpacity style = {styles.se_but}><Text style = {styles.nelsele_but_text}>State Elections</Text></TouchableOpacity></View>\n      <View style ={{flex:1}}><TouchableOpacity style = {styles.le_but}><Text style = {styles.nelsele_but_text}>Local Elections</Text></TouchableOpacity></View>\n      <View style ={{flex:1}}><TouchableOpacity style = {styles.sub_but}><Text style = {styles.nelsele_but_text}>Submit Ballot</Text></TouchableOpacity></View>\n    </View>\n  )\n}\n\nexport default function App() {\n\n  const Stack = createStackNavigator();\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen  name = \"login\" component = {li_screen} options={{ title: 'Log In' }}/>\n        <Stack.Screen name = \"entered\" component = {enter_screen} options={{ title: 'Welcome!' }} />\n        <Stack.Screen name = \"national\" component = {nat_screen} options={{ title: 'National Elections' }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n  container2: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'space-between'\n  },\n  container3: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n  vote_top: {\n    width: 400,\n    height: 200,\n    top: 50\n  },\n  text_intro:{\n    fontSize: 25,\n    fontWeight: \"bold\",\n    justifyContent: 'center',\n    textAlign: 'center',\n    top: 80\n  },\n  text_user: {\n    width: 400,\n    borderWidth: 2, \n    fontSize: 40,\n    top: 120\n  },\n  text_pass: {\n    width: 400,\n    borderWidth: 2, \n    fontSize: 40,\n    top: 150\n    \n  },\n  log_but: {\n    top: 180,\n    width:130,\n    height: 40,\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  },\n  ca_but: {\n    top: 220,\n    width: 250,\n    height: 40,\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  },\n  but_text: {\n    fontSize: 30,\n    color: 'white'\n  },\n  head_style: {\n    color: 'black',\n    fontWeight: 'bold',\n    fontStyle: 'italic',\n    fontSize: 20,\n    textAlign: 'left'\n  },\n  top_tex: {\n    textAlign: 'center',\n    fontSize: 25,\n    top: 20,\n    width: 400\n  },\n  ne_but: {\n    height: 60,\n    width: 300,\n    backgroundColor:'red',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  se_but: {\n    height: 60,\n    width: 300,\n    backgroundColor:'gray',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  le_but: {\n    height: 60,\n    width: 300,\n    backgroundColor:'blue',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  sub_but: {\n    height: 60,\n    width: 300,\n    backgroundColor: 'black',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  nelsele_but_text: {\n    fontSize: 25,\n    color: 'white',\n    fontWeight: 'bold'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}