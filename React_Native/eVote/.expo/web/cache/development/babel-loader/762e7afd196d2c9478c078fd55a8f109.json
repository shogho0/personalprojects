{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\Ghose\\\\Expo_Projects\\\\eVote\\\\App.js\";\nimport 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport { NavigationContainer, useNavigation } from '@react-navigation/native';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport SectionList from \"react-native-web/dist/exports/SectionList\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { CheckBox } from 'react-native-elements';\nimport vt from \"./assets/vote_top.png\";\n\nfunction LogIn() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      userName = _useState2[0],\n      setuserName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passWord = _useState4[0],\n      setpassWord = _useState4[1];\n\n  var navigation = useNavigation();\n\n  function op() {\n    navigation.navigate('entered');\n  }\n\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      alignItems: 'center'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, React.createElement(TextInput, {\n    style: styles.text_user,\n    textAlign: 'center',\n    placeholder: \"Username\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }), React.createElement(TextInput, {\n    style: styles.text_pass,\n    textAlign: 'center',\n    placeholder: \"Password\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }), React.createElement(TouchableOpacity, {\n    onPress: op,\n    style: styles.log_but,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.but_text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 65\n    }\n  }, \" Log In\")));\n}\n\nfunction li_screen() {\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, React.createElement(Image, {\n    source: vt,\n    style: styles.vote_top,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(Text, {\n    style: styles.text_intro,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, \"Welcome to eLector, your online voting platform!\"), React.createElement(LogIn, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}\n\nfunction enter_screen() {\n  var dat = [{\n    title: \"For President of the United States\",\n    data: [\"Barack Obama (Democrat)\", \"Mitt Romney (Republican)\"]\n  }];\n\n  var item = function item(_ref) {\n    var title = _ref.title;\n    React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 5\n      }\n    }, React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 7\n      }\n    }, title));\n  };\n\n  return React.createElement(SafeAreaView, {\n    style: styles.container2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, React.createElement(SectionList, {\n    sections: dat,\n    keyExtractor: function keyExtractor(item, index) {\n      return item + index;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      React.createElement(Item, {\n        title: item,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 40\n        }\n      });\n    },\n    renderSectionHeader: function renderSectionHeader(_ref3) {\n      var title = _ref3.section.title;\n      React.createElement(Text, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 9\n        }\n      }, title);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default function App() {\n  var Stack = createStackNavigator();\n  return React.createElement(NavigationContainer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"login\",\n    component: li_screen,\n    options: {\n      title: 'Log In'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"entered\",\n    component: enter_screen,\n    options: {\n      title: 'Welcome!'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  })));\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  container2: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center'\n  },\n  vote_top: {\n    width: 400,\n    height: 200,\n    top: 50\n  },\n  text_intro: {\n    fontSize: 25,\n    fontWeight: \"bold\",\n    justifyContent: 'center',\n    textAlign: 'center',\n    top: 80\n  },\n  text_user: {\n    width: 400,\n    borderWidth: 2,\n    fontSize: 40,\n    top: 120\n  },\n  text_pass: {\n    width: 400,\n    borderWidth: 2,\n    fontSize: 40,\n    top: 150\n  },\n  log_but: {\n    top: 180,\n    width: 130,\n    height: 40,\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  },\n  but_text: {\n    fontSize: 30,\n    color: 'white'\n  }\n});","map":{"version":3,"sources":["C:/Users/Ghose/Expo_Projects/eVote/App.js"],"names":["React","useState","NavigationContainer","useNavigation","createStackNavigator","CheckBox","vt","LogIn","userName","setuserName","passWord","setpassWord","navigation","op","navigate","flex","alignItems","styles","text_user","text_pass","log_but","but_text","li_screen","container","vote_top","text_intro","enter_screen","dat","title","data","item","container2","index","section","App","Stack","StyleSheet","create","backgroundColor","width","height","top","fontSize","fontWeight","justifyContent","textAlign","borderWidth","color"],"mappings":"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","sourcesContent":["import 'react-native-gesture-handler';\nimport React, { useState } from 'react';\nimport {NavigationContainer, useNavigation} from '@react-navigation/native';\nimport { StyleSheet, Text, View, Image, TextInput, TouchableOpacity, SafeAreaView, SectionList} from 'react-native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport {CheckBox} from 'react-native-elements';\nimport vt from './assets/vote_top.png';\n\nfunction LogIn(){\n  const [userName, setuserName] = useState('');\n  const [passWord, setpassWord] = useState('');\n  const navigation = useNavigation();\n\n  function op(){\n    navigation.navigate('entered');\n  }\n  return(\n    <View style = {{flex: 1, alignItems: 'center'}}>\n      <TextInput style = {styles.text_user} textAlign = {'center'}\n      placeholder = \"Username\"\n      />\n      <TextInput style = {styles.text_pass} textAlign = {'center'}\n      placeholder = \"Password\"\n      />\n\n      <TouchableOpacity onPress = {op} style = {styles.log_but}><Text style = {styles.but_text}> Log In</Text></TouchableOpacity> \n    </View>\n  )\n}\n\nfunction li_screen(){\n  return(\n    <View style={styles.container}>\n      <Image source = {vt} style = {styles.vote_top} />\n      <Text style = {styles.text_intro}>Welcome to eLector, your online voting platform!</Text>\n      <LogIn />\n    </View>\n  )\n}\n\nfunction enter_screen(){\n  const dat = [{title: \"For President of the United States\", data: [\"Barack Obama (Democrat)\", \"Mitt Romney (Republican)\" ]}];\n\n  const item = function ({title}) {\n    <View>\n      <Text>{title}</Text>\n    </View>\n  };\n  return(\n    <SafeAreaView style={styles.container2}>\n      <SectionList\n      sections = {dat}\n      keyExtractor = {(item, index) => item + index}\n      renderItem={function ({ item }) {<Item title={item} />}}\n      renderSectionHeader={function ({ section: { title } }) { (\n        <Text >{title}</Text>\n      )}}\n      />\n      \n    </SafeAreaView>\n  )\n}\n\nexport default function App() {\n  const Stack = createStackNavigator();\n  return (\n    <NavigationContainer>\n      <Stack.Navigator>\n        <Stack.Screen  name = \"login\" component = {li_screen} options={{ title: 'Log In' }}/>\n        <Stack.Screen name = \"entered\" component = {enter_screen} options={{ title: 'Welcome!' }} />\n      </Stack.Navigator>\n    </NavigationContainer>\n\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n  container2: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n  },\n  vote_top: {\n    width: 400,\n    height: 200,\n    top: 50\n  },\n  text_intro:{\n    fontSize: 25,\n    fontWeight: \"bold\",\n    justifyContent: 'center',\n    textAlign: 'center',\n    top: 80\n  },\n  text_user: {\n    width: 400,\n    borderWidth: 2, \n    fontSize: 40,\n    top: 120\n  },\n  text_pass: {\n    width: 400,\n    borderWidth: 2, \n    fontSize: 40,\n    top: 150\n    \n  },\n  log_but: {\n    top: 180,\n    width:130,\n    height: 40,\n    alignItems: 'center',\n    backgroundColor: 'blue'\n  },\n  but_text: {\n    fontSize: 30,\n    color: 'white'\n  }\n});\n"]},"metadata":{},"sourceType":"module"}